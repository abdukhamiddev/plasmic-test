{"version":3,"file":"plasmic-eventbrite.cjs.development.js","sources":["../src/hooks/useEventBrite.ts","../src/eventbrite.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\";\nimport { v4 as uuid } from \"uuid\";\n\nconst TAG_ID = `EB_SCRIPT_${uuid()}`;\nconst SCRIPT_URL = \"https://www.eventbrite.com/static/widgets/eb_widgets.js\";\n\ninterface Props {\n    eventId?: string;\n    modal?: boolean;\n    onOrderComplete: () => void;\n    promoCode?: string;\n    iFrameHeight?: string;\n    iFrameAutoAdapt?: string;\n}\ntype Widget = {\n    widgetType?: string;\n    eventId?: string;\n    onOrderComplete: () => void;\n    modal?: boolean;\n    modalTriggerElementId?: string;\n    promoCode?: string;\n    iframeContainerId?: string;\n}\nconst useEventbrite = ({\n    eventId,\n    modal,\n    onOrderComplete,\n    promoCode,\n}: Props) => {\n    const id = `EB_${uuid()}`;\n    const [isLoaded, setLoaded] = React.useState(false);\n    const onLoad = React.useCallback(() => setLoaded(true), [setLoaded]);\n    const onErr = React.useCallback(\n        (e) => {\n            console.error(`Failed to load Eventbrite script from ${SCRIPT_URL}`);\n            console.error(e);\n\n            setLoaded(false);\n        },\n        [setLoaded]\n    );\n\n    React.useEffect(() => {\n        //@ts-ignore\n        if (globalThis.window?.EBWidgets) {\n            setLoaded(true);\n            return;\n        }\n        const existing = document.getElementById(TAG_ID);\n        if (existing) {\n            existing.remove();\n        }\n        const script = document.createElement(\"script\");\n        script.id = TAG_ID;\n        script.async = true;\n        script.src = SCRIPT_URL;\n        script.addEventListener(\"load\", onLoad);\n        script.addEventListener(\"error\", onErr);\n        script.addEventListener(\"abort\", onErr);\n        document.head.appendChild(script);\n\n        return () => {\n            script.removeEventListener(\"load\", onLoad);\n            script.removeEventListener(\"error\", onErr);\n            script.removeEventListener(\"abort\", onErr);\n            script.remove();\n            setLoaded(false);\n        };\n    }, [setLoaded, onLoad, onErr]);\n\n    React.useEffect(() => {\n        if (!isLoaded) {\n            return;\n        }\n\n        const config: Widget = {\n            widgetType: \"checkout\",\n            eventId,\n            onOrderComplete,\n            modal,\n        };\n\n        if (modal) {\n            config.modalTriggerElementId = id;\n        } else {\n            config.iframeContainerId = id;\n        }\n\n        if (promoCode) {\n            config.promoCode = promoCode;\n        }\n        //@ts-ignore\n        globalThis.window?.EBWidgets.createWidget(config);\n    }, [isLoaded]);\n\n    return isLoaded ? { id } : null;\n};\n\nexport default useEventbrite;\n","import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport React from \"react\";\nimport useEventbrite from \"./hooks/useEventBrite\";\n\nexport function ensure<T>(x: T | null | undefined): T {\n  if (x === null || x === undefined) {\n    debugger;\n    throw new Error(`Value must not be undefined or null`);\n  } else {\n    return x;\n  }\n}\n\nconst modulePath = \"@plasmicpkgs/plasmic-eventbrite\";\n\ninterface EventbriteProps {\n  className?: string;\n  eventId?: string;\n  text?: string;\n}\n\nexport const EventbriteMeta: ComponentMeta<EventbriteProps> = {\n  name: \"Eventbrite\",\n  displayName: \"EventBrite\",\n  importName: \"Eventbrite\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Shows Eventbrite checkout on your website\",\n  defaultStyles: {\n    color: \"#ffffff\",\n    fontSize: \"12px\",\n    width: \"100px\",\n    height: \"25px\",\n    borderWidth: \"0px\",\n    backgroundColor: \"#19aee7\",\n    borderRadius: \"4px\"\n  },\n  props: {\n    eventId: {\n      type: \"string\",\n      displayName: \"Event ID\",\n      description: `Learn how to get event ID (\"https://www.eventbrite.com/platform/docs/events\")`,\n      defaultValue: \"463676879027\",\n      helpText:\"In the URL field at the top, you see something like https://www.eventbrite.com/myevent?eid=123456789 . The number after eid= is the Event ID\"\n    },\n    text: {\n      type: \"string\",\n      displayName: \"Label\",\n      description: \"Label\",\n      defaultValue: \"Buy tickets\",\n\n    },\n  },\n};\n\nexport function Eventbrite({ className, text, eventId }: EventbriteProps) {\n  if (!eventId) {\n    return <div>Please enter Event Id</div>;\n  }\n\n  const handleOrderCompleted = React.useCallback(() => {\n    console.log(\"Order was completed successfully\");\n  }, []);\n\n  const modalButtonCheckout = useEventbrite({\n    eventId: `${eventId!}`,\n    modal: true,\n    onOrderComplete: handleOrderCompleted,\n  });\n\n  return (\n    <button className={className} id={modalButtonCheckout?.id} type=\"button\">\n      {text}\n    </button>\n  );\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport { Eventbrite, EventbriteMeta } from \"./eventbrite\";\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    _registerComponent(Eventbrite, EventbriteMeta);\n  }\n}\nexport * from \"./eventbrite\";\n"],"names":["TAG_ID","uuid","SCRIPT_URL","useEventbrite","eventId","modal","onOrderComplete","promoCode","id","React","useState","isLoaded","setLoaded","onLoad","useCallback","onErr","e","console","error","useEffect","globalThis","window","EBWidgets","existing","document","getElementById","remove","script","createElement","async","src","addEventListener","head","appendChild","removeEventListener","config","widgetType","modalTriggerElementId","iframeContainerId","createWidget","ensure","x","undefined","Error","modulePath","EventbriteMeta","name","displayName","importName","importPath","providesData","description","defaultStyles","color","fontSize","width","height","borderWidth","backgroundColor","borderRadius","props","type","defaultValue","helpText","text","Eventbrite","className","handleOrderCompleted","log","modalButtonCheckout","registerAll","loader","_registerComponent","Component","defaultMeta","registerComponent"],"mappings":"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"}