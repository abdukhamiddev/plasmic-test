{"version":3,"file":"humaaans.cjs.production.min.js","sources":["../src/lib/Human.tsx","../src/utils.ts","../src/humaaans.tsx","../src/index.tsx"],"sourcesContent":["import React from \"react\";\nconst DEFAULT_WIDTH_IN_PX = 380;\nconst DEFAULT_SITTING_HEIGHT_IN_PX = 400;\nconst DEFAULT_STANDING_HEIGHT_IN_PX = 480;\nconst POSTURE_OPTION_SITTING = \"sitting\";\nconst DIRECTION_OPTION_LEFT = \"left\";\nconst SITTING_HEIGHT_ADJUSTMENT_IN_PX = 24;\nconst STANDING_HEIGHT_ADJUSTMENT_IN_PX = 31;\nconst ASSET_ROOT_DIRECTORY = \"./body-parts/\";\nconst HEAD_DIRECTORY_SUFFIX = \"head/\";\nconst TORSO_DIRECTORY_SUFFIX = \"torso/\";\nconst SITTING_DIRECTORY_SUFFIX = \"sitting/\";\nconst STANDING_DIRECTORY_SUFFIX = \"standing/\";\nconst STANDING_HEIGHT_TO_WIDTH_RATIO =\n  DEFAULT_STANDING_HEIGHT_IN_PX / DEFAULT_WIDTH_IN_PX;\nconst SITTING_HEIGHT_TO_WIDTH_RATIO =\n  DEFAULT_SITTING_HEIGHT_IN_PX / DEFAULT_WIDTH_IN_PX;\n\nexport type HumanProps = {\n  skinColor?: string;\n  hairColor?: string;\n  size?: number;\n  head?: string;\n  torso?: string;\n  bottom?: string;\n  posture?: string;\n  direction?: string;\n  className?: string;\n};\n\nfunction setHeightFromSizeAndPosture(size: number, posture: string) {\n  let width = size || DEFAULT_WIDTH_IN_PX;\n  let heightToWidthRatio = setHeigthToWidthRatioFromPosture(posture);\n  return width * heightToWidthRatio;\n}\n\nfunction setHeightAdjustmentFromPosture(posture: string) {\n  let heightAdjustment =\n    posture === POSTURE_OPTION_SITTING\n      ? SITTING_HEIGHT_ADJUSTMENT_IN_PX\n      : STANDING_HEIGHT_ADJUSTMENT_IN_PX;\n  return `translate(40.000000, ${heightAdjustment})`;\n}\n\nfunction setHeigthToWidthRatioFromPosture(posture: string) {\n  return posture === POSTURE_OPTION_SITTING\n    ? SITTING_HEIGHT_TO_WIDTH_RATIO\n    : STANDING_HEIGHT_TO_WIDTH_RATIO;\n}\n\nfunction setHorizontalDirection(direction: string) {\n  if (direction === DIRECTION_OPTION_LEFT) {\n    return \"translate(190.000000, 200.500000) scale(-1, 1) translate(-190.000000, -200.500000)\";\n  } else {\n    return \"\";\n  }\n}\n\nfunction setViewBox(posture: string) {\n  var height =\n    posture === POSTURE_OPTION_SITTING\n      ? DEFAULT_SITTING_HEIGHT_IN_PX\n      : DEFAULT_STANDING_HEIGHT_IN_PX;\n  return `0 0 ${DEFAULT_WIDTH_IN_PX} ${height}`;\n}\n\nfunction setBottomDirectory(posture: string) {\n  let bottomSuffix =\n    posture === POSTURE_OPTION_SITTING\n      ? SITTING_DIRECTORY_SUFFIX\n      : STANDING_DIRECTORY_SUFFIX;\n  return ASSET_ROOT_DIRECTORY + bottomSuffix;\n}\n\nconst Human = ({\n  size,\n  head,\n  skinColor,\n  hairColor,\n  torso,\n  bottom,\n  posture,\n  direction,\n  className,\n}: HumanProps) => {\n  let height = setHeightFromSizeAndPosture(size!, posture!);\n  let heightAdjustFromPosture = setHeightAdjustmentFromPosture(posture!);\n  let horizontalDirectionModifier = setHorizontalDirection(direction!);\n  let viewBox = setViewBox(posture!);\n  const Head = React.lazy(\n    () => import(`${ASSET_ROOT_DIRECTORY}${HEAD_DIRECTORY_SUFFIX}${head}`)\n  );\n\n  const Torso = React.lazy(\n    () => import(`${ASSET_ROOT_DIRECTORY}${TORSO_DIRECTORY_SUFFIX}${torso}`)\n  );\n  const Bottom = React.lazy(\n    () => import(`${setBottomDirectory(posture!)}${bottom}`)\n  );\n\n  const svgContainer = React.createElement(\n    \"svg\",\n    {\n      height: height,\n      width: size || DEFAULT_WIDTH_IN_PX,\n      version: \"1.1\",\n      viewBox: viewBox,\n      xmlns: \"http://www.w3.org/2000/svg\",\n      fill: \"#66ccee\",\n    },\n\n    React.createElement(\n      \"g\",\n      {\n        id: \"humaaans\",\n        fillRule: \"evenodd\",\n        strokeWidth: \"1\",\n      },\n      React.createElement(\n        \"g\",\n        {\n          id: `a-${posture}-human`,\n          transform: `${horizontalDirectionModifier} ${heightAdjustFromPosture}`,\n        },\n        React.createElement(\n          \"g\",\n          {\n            id: \"HEAD\",\n            transform: \"translate(82.000000, 0.000000)\",\n          },\n          //@ts-ignore\n          React.createElement(Head, { skinColor, hairColor })\n        ),\n        React.createElement(\n          \"g\",\n          {\n            id: \"BOTTOM\",\n            transform: \"translate(0.000000, 187.000000)\",\n          },\n          //@ts-ignore\n          React.createElement(Bottom, { skinColor })\n        ),\n        React.createElement(\n          \"g\",\n          {\n            id: \"TORSO\",\n            transform: \"translate(22.000000, 82.000000)\",\n          },\n          //@ts-ignore\n          React.createElement(Torso, { skinColor })\n        )\n      )\n    )\n  );\n  return <div className={className}>{svgContainer}</div>;\n};\n\nexport default Human;\n","export const heads = [\n  {\n    label: \"Afro\",\n    value: \"Afro Airy\",\n  },\n  {\n    label: \"Caesar\",\n    value: \"Caesar\",\n  },\n  {\n    label: \"Chongo\",\n    value: \"Chongo\",\n  },\n  {\n    label: \"Curly\",\n    value: \"Curly\",\n  },\n  {\n    label: \"Hijab\",\n    value: \"Hijab\",\n  },\n  {\n    label: \"Hijab2\",\n    value: \"Hijab2\",\n  },\n  {\n    label: \"Long\",\n    value: \"Long\",\n  },\n  {\n    label: \"NoHair\",\n    value: \"NoHair\",\n  },\n  {\n    label: \"Pony\",\n    value: \"Pony\",\n  },\n  {\n    label: \"Rad\",\n    value: \"Rad\",\n  },\n  {\n    label: \"Short\",\n    value: \"Short\",\n  },\n  {\n    label: \"Short2\",\n    value: \"Short2\",\n  },\n  {\n    label: \"Short Beard\",\n    value: \"ShortBeard\",\n  },\n  {\n    label: \"Top\",\n    value: \"Top\",\n  },\n  {\n    label: \"Turban\",\n    value: \"Turban\",\n  },\n  {\n    label: \"Turban2\",\n    value: \"Turban2\",\n  },\n  {\n    label: \"Wavy\",\n    value: \"Wavy\",\n  },\n];\n\nexport const torsos = [\n  {\n    label: \"Hoodie\",\n    value: \"Hoodie\",\n  },\n  {\n    label: \"Jacket\",\n    value: \"Jacket\",\n  },\n  {\n    label: \"Jacket2\",\n    value: \"Jacket2\",\n  },\n  {\n    label: \"LabCoat\",\n    value: \"LabCoat\",\n  },\n  {\n    label: \"LongSleeve\",\n    value: \"LongSleeve\",\n  },\n  {\n    label: \"Pointing\",\n    value: \"PointingForward\",\n  },\n  {\n    label: \"Pointing Up\",\n    value: \"PointingUp\",\n  },\n  {\n    label: \"Pregnant\",\n    value: \"Pregnant\",\n  },\n  {\n    label: \"Trench\",\n    value: \"TrenchCoat\",\n  },\n  {\n    label: \"Turtle\",\n    value: \"TurtleNeck\",\n  },\n];\nexport const sittingBottom = [\n  {\n    label: \"Baggy\",\n    value: \"BaggyPants\",\n  },\n  {\n    label: \"Skinny\",\n    value: \"BaggyPants\",\n  },\n  {\n    label: \"Sweat\",\n    value: \"SweatPants\",\n  },\n  {\n    label: \"Wheelchair\",\n    value: \"Wheelchair\",\n  },\n];\nexport const standingBottom = [\n  {\n    label: \"Baggy\",\n    value: \"BaggyPants\",\n  },\n  {\n    label: \"Jogging\",\n    value: \"Jogging\",\n  },\n  {\n    label: \"Shorts\",\n    value: \"Shorts\",\n  },\n  {\n    label: \"Skinny\",\n    value: \"SkinnyJeans\",\n  },\n  {\n    label: \"Skinny2\",\n    value: \"SkinnyJeansWalk\",\n  },\n  {\n    label: \"Skirt\",\n    value: \"Skirt\",\n  },\n  {\n    label: \"Sprint\",\n    value: \"Sprint\",\n  },\n  {\n    label: \"Sweat\",\n    value: \"SweatPants\",\n  },\n];\n","import { ComponentMeta } from \"@plasmicapp/host\";\n\nimport Human from \"./lib/Human\";\nimport React from \"react\";\nimport { heads, torsos, sittingBottom, standingBottom } from \"./utils\";\nimport { HumaaansProps } from './lib/types/index';\n\nconst modulePath = \"@plasmicpkgs/humaaans\";\n\n\n\nexport const HumaaansMeta: ComponentMeta<HumaaansProps> = {\n  name: \"Humaaans\",\n  displayName: \"Humaaans\",\n  importName: \"Humaaans\",\n  importPath: modulePath,\n  providesData: true,\n  description: \"Humaaans Player\",\n  props: {\n    head: {\n      type: \"choice\",\n      displayName: \"Head\",\n      description: \"Head\",\n      options: (props, ctx) => {\n        return heads.map((item: any) => ({\n          label: item?.label,\n          value: item?.value,\n        }));\n      },\n      defaultValue: \"Afro\",\n    },\n    torso: {\n      type: \"choice\",\n      displayName: \"Torso\",\n      description: \"Torso\",\n      options: (props, ctx) => {\n        return torsos.map((item: any) => ({\n          label: item?.label,\n          value: item?.value,\n        }));\n      },\n      defaultValue: \"Hoodie\",\n    },\n    posture: {\n      type: \"choice\",\n      displayName: \"Position\",\n      description: \"Position\",\n      options: (props, ctx) => {\n        return [\"sitting\", \"standing\"];\n      },\n      defaultValue: \"sitting\",\n    },\n    bottomSitting: {\n      type: \"choice\",\n      displayName: \"Bottom\",\n      description: \"Bottom\",\n      options: (props, ctx) => {\n        return sittingBottom.map((item: any) => ({\n          label: item?.label,\n          value: item?.value,\n        }));\n      },\n      defaultValue: \"Baggy\",\n      hidden: (props, ctx) => props.posture !== \"sitting\",\n    },\n    bottomStanding: {\n      type: \"choice\",\n      displayName: \"Bottom\",\n      description: \"Bottom\",\n      options: (props, ctx) => {\n        return standingBottom.map((item: any) => ({\n          label: item?.label,\n          value: item?.value,\n        }));\n      },\n      defaultValue: \"Baggy\",\n      hidden: (props, ctx) => props.posture !== \"standing\",\n    },\n    direction: {\n      type: \"choice\",\n      displayName: \"Direction\",\n      description: \"Direction\",\n      options: (props, ctx) => {\n        return [\"right\", \"left\"];\n      },\n      defaultValue: \"right\",\n    },\n    skinColor: {\n      type: \"string\",\n      displayName: \"Skin\",\n      description: \"Skin Color\",\n      defaultValue: \"#B28B67\",\n    },\n    hairColor: {\n      type: \"string\",\n      displayName: \"Hair\",\n      description: \"Hair Color\",\n      defaultValue: \"#191847\",\n    },\n  },\n};\n\nexport function Humaaans({\n  head,\n  torso,\n  direction,\n  posture,\n  bottomStanding,\n  bottomSitting,\n  hairColor,\n  skinColor,\n  className,\n}: HumaaansProps) {\n  let rendered;\n  if (posture === \"sitting\") {\n    rendered = (\n      <Human\n        posture={posture}\n        head={head}\n        direction={direction}\n        torso={torso}\n        bottom={bottomSitting}\n        skinColor={skinColor}\n        hairColor={hairColor}\n        className={className}\n      />\n    );\n  } else {\n    rendered = (\n      <Human\n        posture={posture}\n        head={head}\n        direction={direction}\n        torso={torso}\n        bottom={bottomStanding}\n        className={className}\n      />\n    );\n  }\nconsole.log(rendered);\n\n  return <div className={className}></div>;\n}\n","import registerComponent, {\n  ComponentMeta,\n} from \"@plasmicapp/host/registerComponent\";\nimport registerGlobalContext from \"@plasmicapp/host/registerGlobalContext\";\nimport {\n  Humaaans,\n  HumaaansMeta,\n} from \"./humaaans\";\n\n\nexport function registerAll(loader?: {\n  registerComponent: typeof registerComponent;\n  registerGlobalContext: typeof registerGlobalContext;\n}) {\n  const _registerComponent = <T extends React.ComponentType<any>>(\n    Component: T,\n    defaultMeta: ComponentMeta<React.ComponentProps<T>>\n  ) => {\n    if (loader) {\n      loader.registerComponent(Component, defaultMeta);\n    } else {\n      registerComponent(Component, defaultMeta);\n    }\n  };\n\n  if (loader) {\n    _registerComponent(Humaaans, HumaaansMeta);\n  }\n}\n\nexport * from \"./humaaans\";"],"names":["Human","size","head","skinColor","hairColor","torso","bottom","posture","direction","className","height","setHeigthToWidthRatioFromPosture","setHeightFromSizeAndPosture","heightAdjustFromPosture","setHeightAdjustmentFromPosture","horizontalDirectionModifier","setHorizontalDirection","viewBox","setViewBox","Head","React","lazy","Torso","Bottom","setBottomDirectory","svgContainer","createElement","width","version","xmlns","fill","id","fillRule","strokeWidth","transform","heads","label","value","torsos","sittingBottom","standingBottom","HumaaansMeta","name","displayName","importName","importPath","providesData","description","props","type","options","ctx","map","item","defaultValue","bottomSitting","hidden","bottomStanding","Humaaans","rendered","console","log","loader","Component","defaultMeta","registerComponent"],"mappings":"mcA0EMA,EAAQ,gBACZC,IAAAA,KACAC,IAAAA,KACAC,IAAAA,UACAC,IAAAA,UACAC,IAAAA,MACAC,IAAAA,OACAC,IAAAA,QACAC,IAAAA,UACAC,IAAAA,UAEIC,EAvDN,SAAqCT,EAAcM,UACrCN,GA9Bc,KA2C5B,SAA0CM,SAxCX,YAyCtBA,EA3C4B,IADT,IAEU,IAFV,IA+BDI,CAAiCJ,GAqD7CK,CAA4BX,EAAOM,GAC5CM,EAlDN,SAAwCN,kCAhCT,YAkC3BA,EAhCoC,GACC,QA+ETO,CAA+BP,GACzDQ,EArCN,SAAgCP,SA7CF,SA8CxBA,EACK,qFAEA,GAiCyBQ,CAAuBR,GACrDS,EA9BN,SAAoBV,qBAtDW,YAwD3BA,EA1DiC,IACC,KAqFtBW,CAAWX,GACnBY,EAAOC,EAAMC,MACjB,kBAAM,0DAAyDnB,WAG3DoB,EAAQF,EAAMC,MAClB,kBAAM,2DAA0DhB,WAE5DkB,EAASH,EAAMC,MACnB,kBAAM,wCA/BV,SAA4Bd,SA1DC,iBAJE,YAgE3BA,EAzD6B,WACC,aAqFdiB,CAAmBjB,GAAYD,WAG3CmB,EAAeL,EAAMM,cACzB,MACA,CACEhB,OAAQA,EACRiB,MAAO1B,GAvGe,IAwGtB2B,QAAS,MACTX,QAASA,EACTY,MAAO,6BACPC,KAAM,WAGRV,EAAMM,cACJ,IACA,CACEK,GAAI,WACJC,SAAU,UACVC,YAAa,KAEfb,EAAMM,cACJ,IACA,CACEK,QAASxB,WACT2B,UAAcnB,MAA+BF,GAE/CO,EAAMM,cACJ,IACA,CACEK,GAAI,OACJG,UAAW,kCAGbd,EAAMM,cAAcP,EAAM,CAAEhB,UAAAA,EAAWC,UAAAA,KAEzCgB,EAAMM,cACJ,IACA,CACEK,GAAI,SACJG,UAAW,mCAGbd,EAAMM,cAAcH,EAAQ,CAAEpB,UAAAA,KAEhCiB,EAAMM,cACJ,IACA,CACEK,GAAI,QACJG,UAAW,mCAGbd,EAAMM,cAAcJ,EAAO,CAAEnB,UAAAA,eAK9BiB,uBAAKX,UAAWA,GAAYgB,IC1JxBU,EAAQ,CACnB,CACEC,MAAO,OACPC,MAAO,aAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,OACPC,MAAO,QAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,MACPC,MAAO,OAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,OACPC,MAAO,SAIEC,EAAS,CACpB,CACEF,MAAO,SACPC,MAAO,UAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,aACPC,MAAO,cAET,CACED,MAAO,WACPC,MAAO,mBAET,CACED,MAAO,cACPC,MAAO,cAET,CACED,MAAO,WACPC,MAAO,YAET,CACED,MAAO,SACPC,MAAO,cAET,CACED,MAAO,SACPC,MAAO,eAGEE,EAAgB,CAC3B,CACEH,MAAO,QACPC,MAAO,cAET,CACED,MAAO,SACPC,MAAO,cAET,CACED,MAAO,QACPC,MAAO,cAET,CACED,MAAO,aACPC,MAAO,eAGEG,EAAiB,CAC5B,CACEJ,MAAO,QACPC,MAAO,cAET,CACED,MAAO,UACPC,MAAO,WAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,SACPC,MAAO,eAET,CACED,MAAO,UACPC,MAAO,mBAET,CACED,MAAO,QACPC,MAAO,SAET,CACED,MAAO,SACPC,MAAO,UAET,CACED,MAAO,QACPC,MAAO,eCvJEI,EAA6C,CACxDC,KAAM,WACNC,YAAa,WACbC,WAAY,WACZC,WARiB,wBASjBC,cAAc,EACdC,YAAa,kBACbC,MAAO,CACL9C,KAAM,CACJ+C,KAAM,SACNN,YAAa,OACbI,YAAa,OACbG,QAAS,SAACF,EAAOG,UACRhB,EAAMiB,KAAI,SAACC,SAAe,CAC/BjB,YAAOiB,SAAAA,EAAMjB,MACbC,YAAOgB,SAAAA,EAAMhB,WAGjBiB,aAAc,QAEhBjD,MAAO,CACL4C,KAAM,SACNN,YAAa,QACbI,YAAa,QACbG,QAAS,SAACF,EAAOG,UACRb,EAAOc,KAAI,SAACC,SAAe,CAChCjB,YAAOiB,SAAAA,EAAMjB,MACbC,YAAOgB,SAAAA,EAAMhB,WAGjBiB,aAAc,UAEhB/C,QAAS,CACP0C,KAAM,SACNN,YAAa,WACbI,YAAa,WACbG,QAAS,SAACF,EAAOG,SACR,CAAC,UAAW,aAErBG,aAAc,WAEhBC,cAAe,CACbN,KAAM,SACNN,YAAa,SACbI,YAAa,SACbG,QAAS,SAACF,EAAOG,UACRZ,EAAca,KAAI,SAACC,SAAe,CACvCjB,YAAOiB,SAAAA,EAAMjB,MACbC,YAAOgB,SAAAA,EAAMhB,WAGjBiB,aAAc,QACdE,OAAQ,SAACR,EAAOG,SAA0B,YAAlBH,EAAMzC,UAEhCkD,eAAgB,CACdR,KAAM,SACNN,YAAa,SACbI,YAAa,SACbG,QAAS,SAACF,EAAOG,UACRX,EAAeY,KAAI,SAACC,SAAe,CACxCjB,YAAOiB,SAAAA,EAAMjB,MACbC,YAAOgB,SAAAA,EAAMhB,WAGjBiB,aAAc,QACdE,OAAQ,SAACR,EAAOG,SAA0B,aAAlBH,EAAMzC,UAEhCC,UAAW,CACTyC,KAAM,SACNN,YAAa,YACbI,YAAa,YACbG,QAAS,SAACF,EAAOG,SACR,CAAC,QAAS,SAEnBG,aAAc,SAEhBnD,UAAW,CACT8C,KAAM,SACNN,YAAa,OACbI,YAAa,aACbO,aAAc,WAEhBlD,UAAW,CACT6C,KAAM,SACNN,YAAa,OACbI,YAAa,aACbO,aAAc,sBAKJI,SAWVC,EAVJzD,IAAAA,KACAG,IAAAA,MACAG,IAAAA,UACAD,IAAAA,QAKAE,IAAAA,iBAIEkD,EACEvC,gBAACpB,EAFW,YAAZO,GAGEA,QAASA,EACTL,KAAMA,EACNM,UAAWA,EACXH,MAAOA,EACPC,SAbNiD,cAcMpD,YAZNA,UAaMC,YAdNA,UAeMK,UAAWA,IAMXF,QAASA,EACTL,KAAMA,EACNM,UAAWA,EACXH,MAAOA,EACPC,SA3BNmD,eA4BMhD,UAAWA,IAInBmD,QAAQC,IAAIF,GAEHvC,uBAAKX,UAAWA,2ECnIGqD,OAKxBC,EACAC,EASEF,IAVFC,EAWmBL,EAVnBM,EAU6BvB,EARzBqB,EACFA,EAAOG,kBAAkBF,EAAWC,GAEpCC,EAAkBF,EAAWC"}